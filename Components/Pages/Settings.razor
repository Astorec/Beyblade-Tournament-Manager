@page "/settings"
@using BeybladeTournamentManager.ApiCalls.Challonge
@using BeybladeTournamentManager.Config
@using Challonge.Api
@inject IAutentication _challongeAuth
@inject ISettingsViewModel SettingsVM
@inject NavigationManager Navigation
@inject ISnackbar Snackbar

<MudPaper class="d-flex flex-column justify-center mt-2" Width="50%">

    <MudPaper>
        <MudText>Challonge Settings</MudText>
        <div class="d-flex flex-column">
            <div Class="d-inline-flex pt-2">
                <MudTextField Label="Challonge Username" @bind-Value="@CUsername" />
            </div>
            <div Class="d-inline-flex pt-2">
                <MudTextField Label="Challonge API Key" @bind-Value="@CApiKey" InputType="@PasswordInput"
                    Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="ButtonShowKeyClick"
                    AdornmentAriaLabel="Show APIKey" />
            </div>
        </div>
    </MudPaper>


    <MudPaper>
        <MudText>Google Settings</MudText>
        <div Class="d-inline-flex pt-2">
            <MudTextField Label="Google Sheet Id" @bind-Value="@GoogleSheetId" />
        </div>
    </MudPaper>

    <MudButton Color="Color.Primary" Variant="Variant.Filled" OnClick="SaveSettings">Save Settings</MudButton>
</MudPaper>


@code {
    public string CApiKey { get; set; }
    public string CUsername { get; set; }
    public string GoogleAppName { get; set; }
    public string GoogleSheetId { get; set; }
    ChallongeClient _client;
    InputType PasswordInput = InputType.Password;
    AppSettings currentSettings;
    bool isShow;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    async Task SaveSettings()
    {
        AppSettings settings = new AppSettings
            {
                ChallongeAPIKey = CApiKey,
                ChallongeUsername = CUsername,
                SheetID = GoogleSheetId
            };

        SettingsVM.SaveSettings(settings);
        Snackbar.Add("Settings have been saved successfully!", Severity.Success);

        // Switch to Checkin
        Navigation.NavigateTo("/", true);
        StateHasChanged();
    }

    private void LoginWithGoogle()
    {
        Navigation.NavigateTo("api/auth/google-login", true);
    }
    protected override async Task OnInitializedAsync()
    {
        if (_challongeAuth.GetClient() != null)
        {
            _client = _challongeAuth.GetClient();
            currentSettings = SettingsVM.GetSettings;

            if (currentSettings.ChallongeAPIKey != "")
            {
                CApiKey = currentSettings.ChallongeAPIKey;
            }

            if (currentSettings.ChallongeUsername != "")
            {
                CUsername = currentSettings.ChallongeUsername;
            }

            if (currentSettings.SheetID != "")
            {
                GoogleSheetId = currentSettings.SheetID;
            }
        }
    }

    void ButtonShowKeyClick()
    {
        if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

}
