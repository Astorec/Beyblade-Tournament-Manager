@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject ISettingsViewModel SettingsVM

<MudTabs Outlined="false" Centered="true" Color="Color.Primary" @ref="tabs">
    @if (string.IsNullOrEmpty(SettingsVM.GetSettings.ChallongeUsername) ||
    string.IsNullOrEmpty(SettingsVM.GetSettings.ChallongeAPIKey))
    {
        <MudTabPanel Text="Settings" @ref="settingsTab" Icon="@Icons.Material.Filled.Settings"
            OnClick="@(async () => await NavigateTo("/Settings"))" />
    }
    else if (string.IsNullOrEmpty(SettingsVM.GetSettings.SheetID))
    {
        <MudTabPanel Text="Check-In" @ref="checkInTab" Icon="@Icons.Material.Filled.FactCheck"
            OnClick="@(async () => await NavigateTo("/"))" />
        <MudTabPanel Text="Bracket" @ref="bracketTab" Icon="@Icons.Material.Filled.SportsEsports"
            OnClick="@(async () => await NavigateTo("/Bracket"))" />
        <MudTabPanel Text="Settings" @ref="settingsTab" Icon="@Icons.Material.Filled.Settings"
            OnClick="@(async () => await NavigateTo("/Settings"))" />
    }
    else
    {
        <MudTabPanel Text="Check-In" @ref="checkInTab" Icon="@Icons.Material.Filled.FactCheck"
            OnClick="@(async () => await NavigateTo("/"))" />
        <MudTabPanel Text="Bracket" @ref="bracketTab" Icon="@Icons.Material.Filled.SportsEsports"
            OnClick="@(async () => await NavigateTo("/Bracket"))" />
        <MudTabPanel Text="Leaderboard" @ref="leaderboardTab" Icon="@Icons.Material.Filled.Leaderboard"
            OnClick="@(async () => await NavigateTo("/Leaderboard"))" />
        <MudTabPanel Text="Settings" @ref="settingsTab" Icon="@Icons.Material.Filled.Settings"
            OnClick="@(async () => await NavigateTo("/Settings"))" />
    }


</MudTabs>

@code {

    MudTabs tabs;
    MudTabPanel checkInTab;
    MudTabPanel bracketTab;
    MudTabPanel leaderboardTab;
    MudTabPanel settingsTab;
    bool loaded = false;

    private async Task NavigateTo(string url)
    {
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "lastSelectedTab", url);
        NavigationManager.NavigateTo(url);
    }


}